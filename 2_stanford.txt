

Parsing file: data/testsent.txt
Parsing [sent. 1 len. 10]: The old car broke down in the car park .
(ROOT
  (S
    (NP (DT The) (JJ old) (NN car))
    (VP (VBD broke)
      (PRT (RP down))
      (PP (IN in)
        (NP (DT the) (NN car) (NN park))))
    (. .)))

det(car-3, The-1)
amod(car-3, old-2)
nsubj(broke-4, car-3)
root(ROOT-0, broke-4)
prt(broke-4, down-5)
det(park-9, the-7)
nn(park-9, car-8)
prep_in(broke-4, park-9)

Parsing [sent. 2 len. 11]: At least two men broke in and stole my TV .
(ROOT
  (S
    (NP
      (QP (IN At) (JJS least) (CD two))
      (NNS men))
    (VP
      (VP (VBD broke)
        (PRT (RP in)))
      (CC and)
      (VP (VBD stole)
        (NP (PRP$ my) (NN TV))))
    (. .)))

quantmod(two-3, At-1)
mwe(At-1, least-2)
pobj(At-1, least-2)
num(men-4, two-3)
nsubj(broke-5, men-4)
nsubj(stole-8, men-4)
root(ROOT-0, broke-5)
prt(broke-5, in-6)
conj_and(broke-5, stole-8)
poss(TV-10, my-9)
dobj(stole-8, TV-10)

Parsing [sent. 3 len. 11]: The horses were broken in and ridden in two weeks .
(ROOT
  (S
    (NP (DT The) (NNS horses))
    (VP (VBD were)
      (VP
        (VP (VBN broken)
          (PP (IN in)))
        (CC and)
        (VP (VBN ridden)
          (PP (IN in)
            (NP (CD two) (NNS weeks))))))
    (. .)))

det(horses-2, The-1)
nsubjpass(broken-4, horses-2)
nsubjpass(ridden-7, horses-2)
auxpass(broken-4, were-3)
root(ROOT-0, broken-4)
prep(broken-4, in-5)
conj_and(broken-4, ridden-7)
num(weeks-10, two-9)
prep_in(ridden-7, weeks-10)

Parsing [sent. 4 len. 10]: Kim and Sandy both broke up with their partners .
(ROOT
  (S
    (NP (NNP Kim)
      (CC and)
      (NNP Sandy))
    (DT both)
    (VP (VBD broke)
      (PRT (RP up))
      (PP (IN with)
        (NP (PRP$ their) (NNS partners))))
    (. .)))

nsubj(broke-5, Kim-1)
conj_and(Kim-1, Sandy-3)
nsubj(broke-5, Sandy-3)
dep(broke-5, both-4)
root(ROOT-0, broke-5)
prt(broke-5, up-6)
poss(partners-9, their-8)
prep_with(broke-5, partners-9)

Parsing [sent. 5 len. 13]: The horse which Kim sometimes rides is more bad tempered than mine .
(ROOT
  (S
    (NP
      (NP (DT The) (NN horse))
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (NNP Kim) (NNP sometimes) (NNS rides))
          (VP (VBZ is)
            (ADJP (RBR more) (JJ bad))))))
    (VP (VBN tempered)
      (PP (IN than)
        (NP (NN mine))))
    (. .)))

det(horse-2, The-1)
dobj(bad-9, horse-2)
nsubj(tempered-10, horse-2)
nn(rides-6, Kim-4)
nn(rides-6, sometimes-5)
nsubj(bad-9, rides-6)
cop(bad-9, is-7)
advmod(bad-9, more-8)
rcmod(horse-2, bad-9)
root(ROOT-0, tempered-10)
prep_than(tempered-10, mine-12)

Parsing [sent. 6 len. 15]: The horse as well as the rabbits which we wanted to eat have escaped .
(ROOT
  (S
    (NP
      (NP
        (NP (DT The) (NN horse))
        (CONJP (RB as) (RB well) (IN as))
        (NP (DT the) (NNS rabbits)))
      (SBAR
        (WHNP (WDT which))
        (S
          (NP (PRP we))
          (VP (VBD wanted)
            (S
              (VP (TO to)
                (VP (VB eat))))))))
    (VP (VBP have)
      (VP (VBN escaped)))
    (. .)))

det(horse-2, The-1)
dobj(wanted-10, horse-2)
nsubj(eat-12, horse-2)
nsubj(escaped-14, horse-2)
det(rabbits-7, the-6)
conj_and(horse-2, rabbits-7)
dobj(wanted-10, rabbits-7)
nsubj(eat-12, rabbits-7)
nsubj(escaped-14, rabbits-7)
nsubj(wanted-10, we-9)
rcmod(horse-2, wanted-10)
aux(eat-12, to-11)
xcomp(wanted-10, eat-12)
aux(escaped-14, have-13)
root(ROOT-0, escaped-14)

Parsing [sent. 7 len. 16]: It was my aunt 's car which we sold at auction last year in February .
(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (NP
        (NP (PRP$ my) (NN aunt) (POS 's))
        (NN car)
        (SBAR
          (WHNP (WDT which))
          (S
            (NP (PRP we))
            (VP (VBD sold)
              (PP (IN at)
                (NP (NN auction)))
              (NP (JJ last) (NN year))
              (PP (IN in)
                (NP (NNP February))))))))
    (. .)))

nsubj(car-6, It-1)
cop(car-6, was-2)
poss(aunt-4, my-3)
poss(car-6, aunt-4)
dobj(sold-9, aunt-4)
root(ROOT-0, car-6)
nsubj(sold-9, we-8)
rcmod(aunt-4, sold-9)
ccomp(car-6, sold-9)
prep_at(sold-9, auction-11)
amod(year-13, last-12)
tmod(sold-9, year-13)
prep_in(sold-9, February-15)

Parsing [sent. 8 len. 15]: The only rabbit that I ever liked was eaten by my parents one summer .
(ROOT
  (S
    (NP
      (NP (DT The) (JJ only) (NN rabbit))
      (SBAR (IN that)
        (S
          (NP (PRP I))
          (ADVP (RB ever))
          (VP (VBD liked)))))
    (VP (VBD was)
      (VP (VBN eaten)
        (PP (IN by)
          (NP (PRP$ my) (NNS parents)))
        (NP (CD one) (NN summer))))
    (. .)))

det(rabbit-3, The-1)
amod(rabbit-3, only-2)
nsubjpass(eaten-9, rabbit-3)
mark(liked-7, that-4)
nsubj(liked-7, I-5)
advmod(liked-7, ever-6)
dep(rabbit-3, liked-7)
auxpass(eaten-9, was-8)
root(ROOT-0, eaten-9)
poss(parents-12, my-11)
agent(eaten-9, parents-12)
num(summer-14, one-13)
tmod(eaten-9, summer-14)

Parsing [sent. 9 len. 15]: The veterans who I thought that we would meet at the reunion were dead .
(ROOT
  (S
    (NP
      (NP (DT The) (NNS veterans))
      (SBAR
        (WHNP (WP who))
        (S
          (NP (PRP I))
          (VP (VBD thought)
            (SBAR (IN that)
              (S
                (NP (PRP we))
                (VP (MD would)
                  (VP (VB meet)
                    (PP (IN at)
                      (NP (DT the) (NN reunion)))))))))))
    (VP (VBD were)
      (ADJP (JJ dead)))
    (. .)))

det(veterans-2, The-1)
dobj(thought-5, veterans-2)
nsubj(dead-14, veterans-2)
nsubj(thought-5, I-4)
rcmod(veterans-2, thought-5)
mark(meet-9, that-6)
nsubj(meet-9, we-7)
aux(meet-9, would-8)
ccomp(thought-5, meet-9)
det(reunion-12, the-11)
prep_at(meet-9, reunion-12)
cop(dead-14, were-13)
root(ROOT-0, dead-14)

Parsing [sent. 10 len. 21]: Natural disasters -- storms , ﬂooding , hurricanes -- occur infrequently but cause devastation that strains resources to breaking point .
(ROOT
  (S
    (NP
      (NP (JJ Natural) (NNS disasters))
      (PRN (: --)
        (NP
          (NP (NNS storms))
          (, ,)
          (NP (NN ﬂooding))
          (, ,)
          (NP (NNS hurricanes)))
        (: --)))
    (VP
      (VP (VBP occur)
        (ADVP (RB infrequently)))
      (CC but)
      (VP (VBP cause)
        (NP (NN devastation))
        (SBAR (IN that)
          (S
            (NP (NNS strains) (NNS resources))
            (PP (TO to)
              (NP (JJ breaking) (NN point)))))))
    (. .)))

amod(disasters-2, Natural-1)
nsubj(occur-10, disasters-2)
nsubj(cause-13, disasters-2)
dep(disasters-2, storms-4)
appos(storms-4, ﬂooding-6)
appos(storms-4, hurricanes-8)
root(ROOT-0, occur-10)
advmod(occur-10, infrequently-11)
conj_but(occur-10, cause-13)
dobj(cause-13, devastation-14)
mark(resources-17, that-15)
nn(resources-17, strains-16)
dep(cause-13, resources-17)
dep(resources-17, to-18)
amod(point-20, breaking-19)
pobj(to-18, point-20)

Parsing [sent. 11 len. 25]: Letters delivered on time by old-fashioned means are increasingly rare , so it is as well that that is not the only option available .
(ROOT
  (S
    (S
      (NP
        (NP (NNS Letters))
        (VP (VBN delivered)
          (PP (IN on)
            (NP (NN time)))
          (PP (IN by)
            (NP (JJ old-fashioned) (NNS means)))))
      (VP (VBP are)
        (ADJP (RB increasingly) (JJ rare))))
    (, ,) (IN so)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADVP
          (ADVP (RB as) (RB well))
          (SBAR (IN that)
            (S
              (NP (DT that))
              (VP (VBZ is)
                (ADJP
                  (NP (RB not) (DT the) (JJ only) (NN option))
                  (JJ available))))))))
    (. .)))

nsubj(rare-10, Letters-1)
vmod(Letters-1, delivered-2)
prep_on(delivered-2, time-4)
amod(means-7, old-fashioned-6)
agent(delivered-2, means-7)
cop(rare-10, are-8)
advmod(rare-10, increasingly-9)
root(ROOT-0, rare-10)
dep(rare-10, so-12)
nsubj(is-14, it-13)
parataxis(rare-10, is-14)
advmod(well-16, as-15)
mwe(well-16, as-15)
advmod(is-14, well-16)
mark(available-24, that-17)
nsubj(available-24, that-18)
cop(available-24, is-19)
neg(option-23, not-20)
det(option-23, the-21)
amod(option-23, only-22)
npadvmod(available-24, option-23)
advcl(well-16, available-24)
ccomp(well-16, available-24)

Parsing [sent. 12 len. 25]: It wo n't rain but there might be snow on high ground if the temperature stays about the same over the next 24 hours .
(ROOT
  (S
    (S
      (NP (PRP It))
      (VP (MD wo) (RB n't)
        (VP (VB rain))))
    (CC but)
    (S
      (NP (EX there))
      (VP (MD might)
        (VP (VB be)
          (NP
            (NP (NN snow))
            (PP (IN on)
              (NP (JJ high) (NN ground))))
          (SBAR (IN if)
            (S
              (NP (DT the) (NN temperature))
              (VP (VBZ stays)
                (NP
                  (NP (RB about) (DT the) (JJ same))
                  (PP (IN over)
                    (NP (DT the) (JJ next) (CD 24) (NNS hours))))))))))
    (. .)))

nsubj(rain-4, It-1)
aux(rain-4, wo-2)
neg(rain-4, n't-3)
root(ROOT-0, rain-4)
expl(snow-9, there-6)
aux(snow-9, might-7)
cop(snow-9, be-8)
conj_but(rain-4, snow-9)
amod(ground-12, high-11)
prep_on(snow-9, ground-12)
mark(stays-16, if-13)
det(temperature-15, the-14)
nsubj(stays-16, temperature-15)
advcl(snow-9, stays-16)
advmod(same-19, about-17)
det(same-19, the-18)
dobj(stays-16, same-19)
det(hours-24, the-21)
amod(hours-24, next-22)
num(hours-24, 24-23)
prep_over(same-19, hours-24)

Parsing [sent. 13 len. 23]: The long and lonely road to redemption begins with self-reﬂection : the need to delve inwards to deconstruct layers of psychological obfuscation .
(ROOT
  (S
    (NP
      (NP (DT The)
        (ADJP (JJ long)
          (CC and)
          (JJ lonely))
        (NN road))
      (PP (TO to)
        (NP (NN redemption))))
    (VP (VBZ begins)
      (PP (IN with)
        (NP (NN self-reﬂection)))
      (: :)
      (S
        (NP (DT the) (NN need))
        (VP (TO to)
          (VP (VB delve)
            (NP (NNS inwards))
            (PP (TO to)
              (NP
                (NP (JJ deconstruct) (NNS layers))
                (PP (IN of)
                  (NP (JJ psychological) (NN obfuscation)))))))))
    (. .)))

det(road-5, The-1)
amod(road-5, long-2)
conj_and(long-2, lonely-4)
amod(road-5, lonely-4)
nsubj(begins-8, road-5)
prep_to(road-5, redemption-7)
root(ROOT-0, begins-8)
prep_with(begins-8, self-reﬂection-10)
det(need-13, the-12)
dobj(begins-8, need-13)
nsubj(delve-15, need-13)
aux(delve-15, to-14)
parataxis(begins-8, delve-15)
xcomp(begins-8, delve-15)
dobj(delve-15, inwards-16)
amod(layers-19, deconstruct-18)
prep_to(delve-15, layers-19)
amod(obfuscation-22, psychological-21)
prep_of(layers-19, obfuscation-22)

Parsing [sent. 14 len. 29]: My wildest dream is to build a POS tagger which processes 10K words per second and uses only 1MB of RAM , but it may prove too hard .
(ROOT
  (S
    (S
      (NP (PRP$ My) (NN wildest) (NN dream))
      (VP (VBZ is)
        (S
          (VP (TO to)
            (VP (VB build)
              (NP
                (NP (DT a) (NNP POS) (NN tagger))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP
                      (VP (VBZ processes)
                        (NP
                          (NP (CD 10K) (NNS words))
                          (PP (IN per)
                            (NP (NN second)))))
                      (CC and)
                      (VP (VBZ uses)
                        (NP
                          (NP
                            (QP (RB only) (CD 1MB)))
                          (PP (IN of)
                            (NP (NNP RAM))))))))))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (MD may)
        (VP (VB prove)
          (ADJP (RB too) (JJ hard)))))
    (. .)))

poss(dream-3, My-1)
nn(dream-3, wildest-2)
nsubj(is-4, dream-3)
nsubj(build-6, dream-3)
root(ROOT-0, is-4)
aux(build-6, to-5)
xcomp(is-4, build-6)
det(tagger-9, a-7)
dep(tagger-9, POS-8)
dobj(build-6, tagger-9)
nsubj(processes-11, tagger-9)
nsubj(uses-17, tagger-9)
rcmod(tagger-9, processes-11)
num(words-13, 10K-12)
dobj(processes-11, words-13)
prep_per(words-13, second-15)
rcmod(tagger-9, uses-17)
conj_and(processes-11, uses-17)
quantmod(1MB-19, only-18)
dobj(uses-17, 1MB-19)
prep_of(1MB-19, RAM-21)
nsubj(prove-26, it-24)
aux(prove-26, may-25)
conj_but(is-4, prove-26)
advmod(hard-28, too-27)
acomp(prove-26, hard-28)

Parsing [sent. 15 len. 53]: English also has many words of more or less unique function , including interjections -LRB- oh , ah -RRB- , negatives -LRB- no , not -RRB- , politeness markers -LRB- please , thank you -RRB- , and the existential ` there ' -LRB- there are horses but not unicorns -RRB- among others .
(ROOT
  (S
    (NP (NNP English))
    (ADVP (RB also))
    (VP (VBZ has)
      (NP
        (NP (JJ many) (NNS words))
        (PP (IN of)
          (NP
            (ADJP
              (ADJP (JJR more))
              (CC or)
              (ADJP (RBR less) (JJ unique)))
            (NN function)))
        (, ,)
        (PP (VBG including)
          (NP
            (NP
              (NP
                (NP
                  (NP (NNS interjections))
                  (PRN (-LRB- -LRB-)
                    (FRAG
                      (INTJ (UH oh))
                      (, ,)
                      (NP (NN ah)))
                    (-RRB- -RRB-)))
                (, ,)
                (NP
                  (NP (NNS negatives))
                  (PRN (-LRB- -LRB-)
                    (FRAG
                      (INTJ (UH no))
                      (, ,)
                      (NP (RB not)))
                    (-RRB- -RRB-)))
                (, ,)
                (NP
                  (NP (JJ politeness) (NNS markers))
                  (PRN (-LRB- -LRB-)
                    (S
                      (VP (VB please) (, ,) (VB thank)
                        (NP (PRP you))))
                    (-RRB- -RRB-)))
                (, ,)
                (PP (CC and)
                  (NP
                    (NP (DT the) (NN existential))
                    (`` `)
                    (NP (RB there))
                    ('' '))))
              (PRN (-LRB- -LRB-)
                (S
                  (NP (EX there))
                  (VP (VBP are)
                    (NP
                      (NP (NNS horses))
                      (CONJP (CC but)
                        (RB not))
                      (NP (NNS unicorns)))))
                (-RRB- -RRB-)))
            (PP (IN among)
              (NP (NNS others)))))))
    (. .)))

nsubj(has-3, English-1)
advmod(has-3, also-2)
root(ROOT-0, has-3)
amod(words-5, many-4)
dobj(has-3, words-5)
amod(function-11, more-7)
advmod(unique-10, less-9)
conj_or(more-7, unique-10)
amod(function-11, unique-10)
prep_of(words-5, function-11)
prep_including(words-5, interjections-14)
discourse(ah-18, oh-16)
dep(interjections-14, ah-18)
appos(interjections-14, negatives-21)
discourse(not-25, no-23)
dep(negatives-21, not-25)
amod(markers-29, politeness-28)
appos(interjections-14, markers-29)
dep(markers-29, please-31)
dep(please-31, thank-33)
dobj(please-31, you-34)
prep(interjections-14, and-37)
det(existential-39, the-38)
pobj(and-37, existential-39)
dep(existential-39, there-41)
expl(are-45, there-44)
dep(interjections-14, are-45)
nsubj(are-45, horses-46)
nsubj(are-45, unicorns-49)
conj_negcc(horses-46, unicorns-49)
prep_among(interjections-14, others-52)

Parsing [sent. 16 len. 38]: Making these decisions requires sophisticated knowledge of syntax ; tagging manuals -LRB- Santorini , 1990 -RRB- give various heuristics that can help human coders make these decisions and that can also provide useful features for automatic taggers .
(ROOT
  (S
    (S
      (S
        (VP (VBG Making)
          (NP (DT these) (NNS decisions))))
      (VP (VBZ requires)
        (NP
          (NP (JJ sophisticated) (NN knowledge))
          (PP (IN of)
            (NP (NN syntax))))))
    (: ;)
    (S
      (NP
        (NP (JJ tagging) (NNS manuals))
        (PRN (-LRB- -LRB-)
          (NP (NNP Santorini))
          (, ,)
          (NP (CD 1990))
          (-RRB- -RRB-)))
      (VP (VBP give)
        (NP (JJ various) (NNS heuristics))
        (NP
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD can)
                (VP (VB help)
                  (S
                    (NP (JJ human) (NNS coders))
                    (VP (VB make)
                      (NP (DT these) (NNS decisions))))))))
          (CC and)
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (MD can)
                (ADVP (RB also))
                (VP (VB provide)
                  (NP (JJ useful) (NNS features))
                  (PP (IN for)
                    (NP (JJ automatic) (NNS taggers))))))))))
    (. .)))

csubj(requires-4, Making-1)
det(decisions-3, these-2)
dobj(Making-1, decisions-3)
root(ROOT-0, requires-4)
amod(knowledge-6, sophisticated-5)
dobj(requires-4, knowledge-6)
prep_of(knowledge-6, syntax-8)
amod(manuals-11, tagging-10)
nsubj(give-17, manuals-11)
appos(manuals-11, Santorini-13)
dep(Santorini-13, 1990-15)
parataxis(requires-4, give-17)
amod(heuristics-19, various-18)
iobj(give-17, heuristics-19)
nsubj(help-22, that-20)
aux(help-22, can-21)
dobj(give-17, help-22)
amod(coders-24, human-23)
nsubj(make-25, coders-24)
ccomp(help-22, make-25)
det(decisions-27, these-26)
dobj(make-25, decisions-27)
nsubj(provide-32, that-29)
aux(provide-32, can-30)
advmod(provide-32, also-31)
dobj(give-17, provide-32)
conj_and(help-22, provide-32)
amod(features-34, useful-33)
dobj(provide-32, features-34)
amod(taggers-37, automatic-36)
prep_for(provide-32, taggers-37)

Parsing [sent. 17 len. 16]: The Penn Treebank tagset was culled from the original 87-tag tagset for the Brown Corpus .
(ROOT
  (S
    (NP (DT The) (NNP Penn) (NNP Treebank) (NN tagset))
    (VP (VBD was)
      (VP (VBN culled)
        (PP (IN from)
          (NP
            (NP (DT the) (JJ original) (JJ 87-tag) (NN tagset))
            (PP (IN for)
              (NP (DT the) (NNP Brown) (NNP Corpus)))))))
    (. .)))

det(tagset-4, The-1)
nn(tagset-4, Penn-2)
nn(tagset-4, Treebank-3)
nsubjpass(culled-6, tagset-4)
auxpass(culled-6, was-5)
root(ROOT-0, culled-6)
det(tagset-11, the-8)
amod(tagset-11, original-9)
amod(tagset-11, 87-tag-10)
prep_from(culled-6, tagset-11)
det(Corpus-15, the-13)
nn(Corpus-15, Brown-14)
prep_for(tagset-11, Corpus-15)


Parsing file: data/testsent.txt
Parsing [sent. 1 len. 37]: The slightly simpliﬁed version of the Viterbi algorithm that we present takes as input a single HMM and a sequence of observed words O and returns the most probable state/tag sequence Q together with its probability .
(ROOT
  (S
    (NP
      (NP (DT The)
        (ADJP (RB slightly) (JJ simpliﬁed))
        (NN version))
      (PP (IN of)
        (NP (DT the) (NNP Viterbi))))
    (VP (VBP algorithm)
      (SBAR (IN that)
        (S
          (NP (PRP we))
          (VP
            (VP
              (ADVP (RB present))
              (VBZ takes)
              (PP (IN as)
                (NP (NN input)))
              (NP
                (NP (DT a) (JJ single) (NN HMM))
                (CC and)
                (NP
                  (NP (DT a) (NN sequence))
                  (PP (IN of)
                    (NP
                      (ADJP (JJ observed))
                      (NNS words) (NN O))))))
            (CC and)
            (VP (VBZ returns)
              (NP
                (NP (DT the)
                  (ADJP (RBS most) (JJ probable))
                  (NN state/tag) (NN sequence) (NNP Q))
                (ADVP (RB together)))
              (PP (IN with)
                (NP (PRP$ its) (NN probability))))))))
    (. .)))

det(version-4, The-1)
advmod(simpliﬁed-3, slightly-2)
amod(version-4, simpliﬁed-3)
nsubj(algorithm-8, version-4)
det(Viterbi-7, the-6)
prep_of(version-4, Viterbi-7)
root(ROOT-0, algorithm-8)
mark(takes-12, that-9)
nsubj(takes-12, we-10)
nsubj(returns-26, we-10)
advmod(takes-12, present-11)
ccomp(algorithm-8, takes-12)
prep_as(takes-12, input-14)
det(HMM-17, a-15)
amod(HMM-17, single-16)
dobj(takes-12, HMM-17)
det(sequence-20, a-19)
dobj(takes-12, sequence-20)
conj_and(HMM-17, sequence-20)
amod(O-24, observed-22)
nn(O-24, words-23)
prep_of(sequence-20, O-24)
ccomp(algorithm-8, returns-26)
conj_and(takes-12, returns-26)
det(Q-32, the-27)
advmod(probable-29, most-28)
amod(Q-32, probable-29)
nn(Q-32, state/tag-30)
nn(Q-32, sequence-31)
dobj(returns-26, Q-32)
advmod(Q-32, together-33)
poss(probability-36, its-35)
prep_with(returns-26, probability-36)

Parsing [sent. 2 len. 35]: Thus the EM-trained `` pure HMM '' tagger is probably best suited to cases where no training data is available , for example , when tagging languages for which no data was previously hand-tagged .
(ROOT
  (S
    (ADVP (RB Thus))
    (NP (DT the) (JJ EM-trained) (`` ``) (JJ pure) (NN HMM) ('' '') (NN tagger))
    (VP (VBZ is)
      (ADVP (RB probably))
      (VP
        (ADVP (RBS best))
        (VBN suited)
        (PP (TO to)
          (NP
            (NP (NNS cases))
            (SBAR
              (WHADVP (WRB where))
              (S
                (NP (DT no) (NN training) (NNS data))
                (VP (VBZ is)
                  (ADJP (JJ available))
                  (, ,)
                  (PP (IN for)
                    (NP
                      (NP (NN example))
                      (, ,)
                      (SBAR
                        (WHNP
                          (NP (WRB when) (JJ tagging) (NNS languages))
                          (WHPP (IN for)
                            (WHNP (WDT which))))
                        (S
                          (NP (DT no) (NNS data))
                          (VP (VBD was)
                            (ADJP (RB previously) (JJ hand-tagged))))))))))))))
    (. .)))

advmod(suited-12, Thus-1)
det(tagger-8, the-2)
amod(tagger-8, EM-trained-3)
amod(tagger-8, pure-5)
nn(tagger-8, HMM-6)
nsubjpass(suited-12, tagger-8)
auxpass(suited-12, is-9)
advmod(suited-12, probably-10)
advmod(suited-12, best-11)
root(ROOT-0, suited-12)
prep_to(suited-12, cases-14)
advmod(available-20, where-15)
neg(data-18, no-16)
nn(data-18, training-17)
nsubj(available-20, data-18)
cop(available-20, is-19)
rcmod(cases-14, available-20)
prep_for(available-20, example-23)
prep_for(languages-27, example-23)
advmod(languages-27, when-25)
amod(languages-27, tagging-26)
dobj(hand-tagged-34, languages-27)
neg(data-31, no-30)
nsubj(hand-tagged-34, data-31)
cop(hand-tagged-34, was-32)
advmod(hand-tagged-34, previously-33)
rcmod(example-23, hand-tagged-34)

Parsing [sent. 3 len. 42]: Coming home from very lonely places , all of us go a little mad : whether from great personal success , or just an all-night drive , we are the sole survivors of a world no one else has ever seen .
(ROOT
  (S
    (S
      (VP (VBG Coming)
        (NP (NN home))
        (PP (IN from)
          (NP
            (ADJP (RB very) (JJ lonely))
            (NNS places)))))
    (, ,)
    (NP
      (NP (DT all))
      (PP (IN of)
        (NP (PRP us))))
    (VP (VBP go)
      (ADJP
        (NP (DT a) (RB little))
        (JJ mad))
      (: :)
      (SBAR (IN whether)
        (S
          (PP (IN from)
            (NP
              (NP (JJ great) (JJ personal) (NN success))
              (, ,)
              (CC or)
              (RB just)
              (NP (DT an) (JJ all-night) (NN drive))))
          (, ,)
          (NP (PRP we))
          (VP (VBP are)
            (NP
              (NP (DT the) (JJ sole) (NNS survivors))
              (PP (IN of)
                (NP
                  (NP (DT a) (NN world))
                  (SBAR
                    (S
                      (NP (DT no) (NN one) (RB else))
                      (VP (VBZ has)
                        (ADVP (RB ever))
                        (VP (VBN seen))))))))))))
    (. .)))

vmod(go-11, Coming-1)
dobj(Coming-1, home-2)
advmod(lonely-5, very-4)
amod(places-6, lonely-5)
prep_from(Coming-1, places-6)
nsubj(go-11, all-8)
prep_of(all-8, us-10)
root(ROOT-0, go-11)
det(little-13, a-12)
npadvmod(mad-14, little-13)
acomp(go-11, mad-14)
mark(survivors-32, whether-16)
amod(success-20, great-18)
amod(success-20, personal-19)
prep_from(survivors-32, success-20)
advmod(success-20, just-23)
conj_or(success-20, just-23)
prep_from(survivors-32, just-23)
det(drive-26, an-24)
amod(drive-26, all-night-25)
dep(success-20, drive-26)
nsubj(survivors-32, we-28)
cop(survivors-32, are-29)
det(survivors-32, the-30)
amod(survivors-32, sole-31)
ccomp(go-11, survivors-32)
parataxis(go-11, survivors-32)
det(world-35, a-34)
prep_of(survivors-32, world-35)
neg(one-37, no-36)
nsubj(seen-41, one-37)
advmod(one-37, else-38)
aux(seen-41, has-39)
advmod(seen-41, ever-40)
rcmod(world-35, seen-41)

Parsing [sent. 4 len. 17]: Skill without imagination is craftsmanship and gives us many useful objects such as wickerwork picnic baskets .
(ROOT
  (S
    (NP
      (NP (NNP Skill))
      (PP (IN without)
        (NP (NN imagination))))
    (VP
      (VP (VBZ is)
        (NP (NN craftsmanship)))
      (CC and)
      (VP (VBZ gives)
        (NP (PRP us))
        (NP
          (NP (JJ many) (JJ useful) (NNS objects))
          (PP (JJ such) (IN as)
            (NP (NN wickerwork) (NN picnic) (NNS baskets))))))
    (. .)))

nsubj(craftsmanship-5, Skill-1)
nsubj(gives-7, Skill-1)
prep_without(Skill-1, imagination-3)
cop(craftsmanship-5, is-4)
root(ROOT-0, craftsmanship-5)
conj_and(craftsmanship-5, gives-7)
iobj(gives-7, us-8)
amod(objects-11, many-9)
amod(objects-11, useful-10)
dobj(gives-7, objects-11)
nn(baskets-16, wickerwork-14)
nn(baskets-16, picnic-15)
prep_such_as(objects-11, baskets-16)

Parsing [sent. 5 len. 8]: Imagination without skill gives us modern art .
(ROOT
  (S
    (NP
      (NP (NNP Imagination))
      (PP (IN without)
        (NP (NN skill))))
    (VP (VBZ gives)
      (NP (PRP us))
      (NP (JJ modern) (NN art)))
    (. .)))

nsubj(gives-4, Imagination-1)
prep_without(Imagination-1, skill-3)
root(ROOT-0, gives-4)
iobj(gives-4, us-5)
amod(art-7, modern-6)
dobj(gives-4, art-7)

Parsing [sent. 6 len. 24]: An MoD spokesman said : `` Surveys of Astute have now been completed and she will proceed to Faslane under her own power .
(ROOT
  (S
    (NP (DT An) (NNP MoD) (NN spokesman))
    (VP (VBD said) (: :) (`` ``)
      (S
        (S
          (NP
            (NP (NNS Surveys))
            (PP (IN of)
              (NP (NNP Astute))))
          (VP (VBP have)
            (ADVP (RB now))
            (VP (VBN been)
              (VP (VBN completed)))))
        (CC and)
        (S
          (NP (PRP she))
          (VP (MD will)
            (VP (VB proceed)
              (S
                (VP (TO to)
                  (VP (VB Faslane)
                    (PP (IN under)
                      (NP (PRP$ her) (JJ own) (NN power)))))))))))
    (. .)))

det(spokesman-3, An-1)
nn(spokesman-3, MoD-2)
nsubj(said-4, spokesman-3)
root(ROOT-0, said-4)
nsubjpass(completed-13, Surveys-7)
prep_of(Surveys-7, Astute-9)
aux(completed-13, have-10)
advmod(completed-13, now-11)
auxpass(completed-13, been-12)
dep(said-4, completed-13)
nsubj(proceed-17, she-15)
nsubj(Faslane-19, she-15)
aux(proceed-17, will-16)
dep(said-4, proceed-17)
conj_and(completed-13, proceed-17)
aux(Faslane-19, to-18)
xcomp(proceed-17, Faslane-19)
poss(power-23, her-21)
amod(power-23, own-22)
prep_under(Faslane-19, power-23)

Parsing [sent. 7 len. 11]: She is being escorted by tugs and HMS Shoreham . ''
(ROOT
  (S
    (NP (PRP She))
    (VP (VBZ is)
      (VP (VBG being)
        (VP (VBN escorted)
          (PP (IN by)
            (NP
              (NP (NNS tugs))
              (CC and)
              (NP (NNP HMS) (NNP Shoreham)))))))
    (. .) ('' '')))

nsubjpass(escorted-4, She-1)
aux(escorted-4, is-2)
auxpass(escorted-4, being-3)
root(ROOT-0, escorted-4)
agent(escorted-4, tugs-6)
nn(Shoreham-9, HMS-8)
agent(escorted-4, Shoreham-9)
conj_and(tugs-6, Shoreham-9)

Parsing [sent. 8 len. 41]: But far fewer people fully understand how the Media Lab operates , ﬁts into MIT , and encourages such a creative environment ; about half of the anniversary celebration 's program focused on simply deﬁning what the Media Lab is .
(ROOT
  (S (CC But)
    (NP
      (ADJP (RB far) (JJR fewer))
      (NNS people))
    (ADVP (RB fully))
    (VP (VBP understand)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (DT the) (NNP Media) (NNP Lab))
          (VP
            (VP (VBZ operates))
            (, ,)
            (VP (VBP ﬁts)
              (PP (IN into)
                (NP (NNP MIT))))
            (, ,)
            (CC and)
            (VP (VBZ encourages)
              (NP
                (NP (PDT such) (DT a) (JJ creative) (NN environment))
                (: ;)
                (NP
                  (NP
                    (QP (RB about) (PDT half)))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NN anniversary) (NN celebration) (POS 's))
                      (NN program)))
                  (VP (VBN focused)
                    (PP (IN on)
                      (S
                        (ADVP (RB simply))
                        (VP (VBG deﬁning)
                          (SBAR
                            (WHNP (WP what))
                            (S
                              (NP (DT the) (NNP Media) (NNP Lab))
                              (VP (VBZ is)))))))))))))))
    (. .)))

cc(understand-6, But-1)
advmod(fewer-3, far-2)
amod(people-4, fewer-3)
nsubj(understand-6, people-4)
advmod(understand-6, fully-5)
root(ROOT-0, understand-6)
advmod(operates-11, how-7)
det(Lab-10, the-8)
nn(Lab-10, Media-9)
nsubj(operates-11, Lab-10)
nsubj(ﬁts-13, Lab-10)
nsubj(encourages-18, Lab-10)
ccomp(understand-6, operates-11)
ccomp(understand-6, ﬁts-13)
conj_and(operates-11, ﬁts-13)
prep_into(ﬁts-13, MIT-15)
ccomp(understand-6, encourages-18)
conj_and(operates-11, encourages-18)
predet(environment-22, such-19)
det(environment-22, a-20)
amod(environment-22, creative-21)
dobj(encourages-18, environment-22)
quantmod(half-25, about-24)
dep(environment-22, half-25)
det(celebration-29, the-27)
nn(celebration-29, anniversary-28)
poss(program-31, celebration-29)
prep_of(half-25, program-31)
vmod(half-25, focused-32)
advmod(deﬁning-35, simply-34)
prepc_on(focused-32, deﬁning-35)
dobj(is-40, what-36)
det(Lab-39, the-37)
nn(Lab-39, Media-38)
nsubj(is-40, Lab-39)
ccomp(deﬁning-35, is-40)

Parsed file: data/testsent.txt [8 sentences].
Parsed 215 words in 8 sentences (66.83 wds/sec; 2.49 sents/sec).
